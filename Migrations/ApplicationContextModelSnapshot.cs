// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ex_graphql.Entities.Context;

namespace ex_graphql.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ex_graphql.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b2b439e7-e6ab-495b-bc99-a7eae85ba6d3"),
                            Email = "johndoe@doe.com",
                            IdentificationNumber = "123456789",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("6e2eccf5-0204-45c5-b519-a49944fa08c8"),
                            Email = "mariedoe@doe.com",
                            IdentificationNumber = "12345678",
                            Name = "Marie Doe"
                        });
                });

            modelBuilder.Entity("ex_graphql.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("51da8c52-a597-441e-96a6-e658a8138286"),
                            CreatedAt = new DateTime(2022, 3, 27, 20, 36, 23, 93, DateTimeKind.Local).AddTicks(6628),
                            CustomerId = new Guid("b2b439e7-e6ab-495b-bc99-a7eae85ba6d3"),
                            Price = 24m,
                            Quantity = 10,
                            Status = 0,
                            Symbol = "PETR4",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("37b95c65-58ff-4d2c-b0cd-64ac721c5946"),
                            CreatedAt = new DateTime(2022, 3, 27, 20, 36, 23, 94, DateTimeKind.Local).AddTicks(5969),
                            CustomerId = new Guid("b2b439e7-e6ab-495b-bc99-a7eae85ba6d3"),
                            Price = 4m,
                            Quantity = 100,
                            Status = 1,
                            Symbol = "OIBR3",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("f9d55c8b-7a63-4896-8ab1-2144d38c35a2"),
                            CreatedAt = new DateTime(2022, 3, 27, 20, 36, 23, 94, DateTimeKind.Local).AddTicks(5983),
                            CustomerId = new Guid("6e2eccf5-0204-45c5-b519-a49944fa08c8"),
                            Price = 24m,
                            Quantity = 10,
                            Status = 1,
                            Symbol = "BBDC4",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("d1cf20bb-a220-4952-8904-a6231e2ed91a"),
                            CreatedAt = new DateTime(2022, 3, 27, 20, 36, 23, 94, DateTimeKind.Local).AddTicks(5986),
                            CustomerId = new Guid("6e2eccf5-0204-45c5-b519-a49944fa08c8"),
                            Price = 24m,
                            Quantity = 20,
                            Status = 0,
                            Symbol = "PETR4",
                            Type = 0
                        });
                });

            modelBuilder.Entity("ex_graphql.Entities.Order", b =>
                {
                    b.HasOne("ex_graphql.Entities.Customer", null)
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ex_graphql.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
